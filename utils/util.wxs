// 字符串截取
function substring(val,start,end) {
  if (val.length == 0 || val == undefined) {
    return;
  }
  return val.substring(start,end);
}
// 字符串转数组
function stringToArray(string,splitKeyword) {
    return string.split(splitKeyword);
}
// 数字小写转大写
var cnum = ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九', '十'];
function lowercaseToCapitalization (n) {
	var s = '';
	n = '' + n; // 数字转为字符串
	for (var i = 0; i < n.length; i++) {
		s += cnum[parseInt(n.charAt(i))];
	}
	if (s.length == 2) { // 两位数的时候
		// 如果个位数是0的时候，令改成十
		if (s.charAt(1) == cnum[0]) {
			s = s.charAt(0) + cnum[10];
			// 如果是一十改成十
			if (s == cnum[1] + cnum[10]) {
				s = cnum[10];
			}
		} else if (s.charAt(0) == cnum[1]) {
			// 如果十位数是一的话改成十
			s = cnum[10] + s.charAt(1);
		}
	}
	return s;
}
// 保留两位小数
function parseNum(val) {
  return parseFloat(val || 0).toFixed(2);
}
// 取整
function parseIn(val) {
  return parseInt(val || 0);
}
// 倒计时函数
function formatterTimer(systimestamp, compareTime, countdownTime) {
  countdownTime = countdownTime || 0;
  var reg = getRegExp("-", "g"); // 获取正则表达式，全局替换
  compareTime = compareTime.replace(reg, '/'); // 时间格式转换
  // 将字符串转换成时间格式
  compareTime = getDate(compareTime).valueOf();
  var result = {};
  var nowTime = systimestamp / 1000;// 当前系统的时间戳
  var futureTime = getDate(compareTime).getTime() / 1000 + countdownTime * 24 * 60 * 60; // 操作时间 + 倒计时时间
  // 未来的时间减去现在的时间;
  var resTime = futureTime - nowTime;
  var date = Math.ceil(resTime / (24 * 60 * 60));
  if (countdownTime !== 0) {
      if (date === 0) {
        date = 0;
      }
      if (date >= countdownTime) {
        date = countdownTime;
      }
  }
  return date > 0 ? date : 0;
}
// 数据长度
function dataLen(obj) {
  return obj.length
}
// 限制展示的字符个数 ,arg1:表示展示的文本，arg2:限制的个数
function limitNumber(obj,num) {
  var len = obj.length
  if (len <= num) {
    return obj
  } else {
    var str = obj.substring(0,num) + '...'
    return str
  }
}
module.exports = {
  substring: substring,
  lowercaseToCapitalization: lowercaseToCapitalization,
  stringToArray: stringToArray,
  parseIn: parseIn,
  parseNum: parseNum,
  formatterTimer: formatterTimer,
  dataLen: dataLen,
  limitNumber: limitNumber
};
